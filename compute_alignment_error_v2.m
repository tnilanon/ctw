function error = compute_alignment_error_v2(alignment, indice_a, indice_b, column_idx_a, column_idx_b)

path_a = alignment.P(:, column_idx_a);
path_b = alignment.P(:, column_idx_b);

ts_a_estimated_index_begin = mean(alignment.P(path_b == indice_b.index_begin, column_idx_a));
ts_b_estimated_index_begin = mean(alignment.P(path_a == indice_a.index_begin, column_idx_b));
ts_a_estimated_index_subtask_2 = mean(alignment.P(path_b == indice_b.index_subtask_2, column_idx_a));
ts_b_estimated_index_subtask_2 = mean(alignment.P(path_a == indice_a.index_subtask_2, column_idx_b));
ts_a_estimated_index_subtask_3 = mean(alignment.P(path_b == indice_b.index_subtask_3, column_idx_a));
ts_b_estimated_index_subtask_3 = mean(alignment.P(path_a == indice_a.index_subtask_3, column_idx_b));
ts_a_estimated_index_end = mean(alignment.P(path_b == indice_b.index_end, column_idx_a));
ts_b_estimated_index_end = mean(alignment.P(path_a == indice_a.index_end, column_idx_b));

ts_a_estimated_subtask_1_length = ts_a_estimated_index_subtask_2 - ts_a_estimated_index_begin;
ts_b_estimated_subtask_1_length = ts_b_estimated_index_subtask_2 - ts_b_estimated_index_begin;
ts_a_estimated_subtask_2_length = ts_a_estimated_index_subtask_3 - ts_a_estimated_index_subtask_2;
ts_b_estimated_subtask_2_length = ts_b_estimated_index_subtask_3 - ts_b_estimated_index_subtask_2;
ts_a_estimated_subtask_3_length = ts_a_estimated_index_end - ts_a_estimated_index_subtask_3;
ts_b_estimated_subtask_3_length = ts_b_estimated_index_end - ts_b_estimated_index_subtask_3;

indice_a_subtask_1_length = indice_a.index_subtask_2 - indice_a.index_begin;
indice_b_subtask_1_length = indice_b.index_subtask_2 - indice_b.index_begin;
indice_a_subtask_2_length = indice_a.index_subtask_3 - indice_a.index_subtask_2;
indice_b_subtask_2_length = indice_b.index_subtask_3 - indice_b.index_subtask_2;
indice_a_subtask_3_length = indice_a.index_end - indice_a.index_subtask_3;
indice_b_subtask_3_length = indice_b.index_end - indice_b.index_subtask_3;

mae_subtask_1 = abs([ ...
    ts_a_estimated_index_begin - indice_a.index_begin,           ts_b_estimated_index_begin - indice_b.index_begin; ...
    ts_a_estimated_subtask_1_length - indice_a_subtask_1_length, ts_b_estimated_subtask_1_length - indice_b_subtask_1_length; ...
    ts_a_estimated_index_subtask_2 - indice_a.index_subtask_2,   ts_b_estimated_index_subtask_2 - indice_b.index_subtask_2; ...
    ]);
mre_subtask_1 = mae_subtask_1 ./ [indice_a_subtask_1_length, indice_b_subtask_1_length];
mae_subtask_2 = abs([ ...
    ts_a_estimated_index_subtask_2 - indice_a.index_subtask_2,   ts_b_estimated_index_subtask_2 - indice_b.index_subtask_2; ...
    ts_a_estimated_subtask_2_length - indice_a_subtask_2_length, ts_b_estimated_subtask_2_length - indice_b_subtask_2_length; ...
    ts_a_estimated_index_subtask_3 - indice_a.index_subtask_3,   ts_b_estimated_index_subtask_3 - indice_b.index_subtask_3; ...
    ]);
mre_subtask_2 = mae_subtask_2 ./ [indice_a_subtask_2_length, indice_b_subtask_2_length];
mae_subtask_3 = abs([ ...
    ts_a_estimated_index_subtask_3 - indice_a.index_subtask_3,   ts_b_estimated_index_subtask_3 - indice_b.index_subtask_3; ...
    ts_a_estimated_subtask_3_length - indice_a_subtask_3_length, ts_b_estimated_subtask_3_length - indice_b_subtask_3_length; ...
    ts_a_estimated_index_end - indice_a.index_end,               ts_b_estimated_index_end - indice_b.index_end; ...
    ]);
mre_subtask_3 = mae_subtask_3 ./ [indice_a_subtask_3_length, indice_b_subtask_3_length];

error = [ ...
    mean(mae_subtask_1, 2); ...
    mean(mre_subtask_1, 2); ...
    mean(mae_subtask_2, 2); ...
    mean(mre_subtask_2, 2); ...
    mean(mae_subtask_3, 2); ...
    mean(mre_subtask_3, 2); ...
]';

